What are type and interface?

Both are used in TypeScript to define the shape of something, like what properties an object should have or how data should look.
Think of them as "blueprints" for your data.


When to Use What

      Use interface if:

You’re working with objects or classes.
You want to add to it later.

      Use type if:

You’re working with complex data (e.g., unions or tuples).
You don’t need to expand it later.

Easiest Analogy
Think of interfaces as Lego blocks: You can attach more pieces (properties) later to make them bigger.
Think of types as clay sculptures: Once you shape them, they’re set and can’t be modified later.
